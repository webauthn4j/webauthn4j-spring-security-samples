/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext{
        //Plugins
        springBootVersion = '3.3.4'
        sonarqubeVersion = '5.1.0.4882'
        asciidoctorGradleVersion = "4.0.3"

        //Libraries
        webauthn4jVersion = '0.29.0-SNAPSHOT'
        springSecurityVersion = '6.0.2'
        hibernateValidatorVersion = '8.0.1.Final'
        thymeleafVersion = '3.0.4.RELEASE'
        modelMapperVersion = '3.2.1'

        bootstrapVersion = '5.3.3'
        jqueryVersion = '3.7.1'
        fontAwesomeVersion = '6.5.2'
        webjarsLocatorVersion = '0.52'

        log4jdbcVersion = '0.2.7'
        dbunitVersion = '2.8.0'
        springTestDbunitVersion = '1.3.0'
        webDriverManagerVersion = '5.9.2'
        // To use WebAuthn WebDriver extension, alpha release is used here.
        // When stable version is released, and Spring Boot BOM includes it, this need to be removed.
        seleniumVersion = '4.25.0'

    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqubeVersion")
        classpath("org.asciidoctor:asciidoctor-gradle-jvm:$asciidoctorGradleVersion")
    }

}

apply plugin: 'org.sonarqube'
apply plugin: 'org.asciidoctor.jvm.convert'


group 'com.webauthn4j'
version "${webAuthn4JSpringSecurityVersion}"

repositories {
    mavenCentral() //for jruby used in asciidoctorj
}

subprojects {

    apply plugin: 'java'

    sourceCompatibility = 17

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Werror"
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url 'https://jitpack.io' }
    }


    dependencies {
        // BOM
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        implementation platform("org.springframework.security:spring-security-bom:${springSecurityVersion}")

        constraints {
            // Independent libraries
            implementation("com.webauthn4j:webauthn4j-util:$webauthn4jVersion")
            implementation("com.webauthn4j:webauthn4j-core:$webauthn4jVersion")
            implementation("com.webauthn4j:webauthn4j-metadata:$webauthn4jVersion")
            implementation("com.webauthn4j:webauthn4j-test:$webauthn4jVersion")

            implementation("com.webauthn4j:webauthn4j-spring-security-core:$webAuthn4JSpringSecurityVersion")
            implementation("com.webauthn4j:webauthn4j-spring-security-metadata:$webAuthn4JSpringSecurityVersion")
            implementation("com.webauthn4j:webauthn4j-spring-security-test:$webAuthn4JSpringSecurityVersion")

            // Independent libraries for Sample applications
            implementation("org.hibernate:hibernate-validator:$hibernateValidatorVersion")
            implementation("org.thymeleaf:thymeleaf-testing:$thymeleafVersion")
            implementation("org.modelmapper:modelmapper:$modelMapperVersion")
            implementation("org.lazyluke:log4jdbc-remix:$log4jdbcVersion")

            implementation("org.webjars:bootstrap:$bootstrapVersion")
            implementation("org.webjars:jquery:$jqueryVersion")
            implementation("org.webjars:font-awesome:$fontAwesomeVersion")
            implementation("org.webjars:webjars-locator:$webjarsLocatorVersion")

            implementation("org.dbunit:dbunit:$dbunitVersion")
            implementation("com.github.springtestdbunit:spring-test-dbunit:$springTestDbunitVersion")
            implementation("io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion")
            implementation("org.seleniumhq.selenium:selenium-java:$seleniumVersion")
        }
    }

}
